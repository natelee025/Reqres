{"name": "test_successful_register[successful_register]", "status": "broken", "statusDetails": {"message": "pydantic_core._pydantic_core.ValidationError: 1 validation error for RegisterSchema\nid\n  Input should be a valid string [type=string_type, input_value=4, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.6/v/string_type", "trace": "data = {'email': 'eve.holt@reqres.in', 'password': 'pistol'}, status_code = 200, schema = <class 'schemas.register_schema.RegisterSchema'>\n\n    @pytest.mark.api\n    @pytest.mark.parametrize('data, status_code, schema', (successful_register,), ids=['successful_register', ])\n    def test_successful_register(data, status_code, schema):\n        response = requests.post(url=reg_endpoint, data=data)\n        reg = RegisterAPI(response)\n        reg.assert_status_code(status_code)\n>       reg.val_reg_schema(schema)\n\nTests\\API\\test_register.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageclasses\\register.py:9: in val_reg_schema\n    self.validate_schema(schema)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pageclasses.register.RegisterAPI object at 0x0000028C3E1AC5B0>, schema = <class 'schemas.register_schema.RegisterSchema'>\n\n    def validate_schema(self, schema):\n>       schema.model_validate(self.response.json())\nE       pydantic_core._pydantic_core.ValidationError: 1 validation error for RegisterSchema\nE       id\nE         Input should be a valid string [type=string_type, input_value=4, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.6/v/string_type\n\nbaseclasses\\base_api.py:12: ValidationError"}, "parameters": [{"name": "data", "value": "{'email': 'eve.holt@reqres.in', 'password': 'pistol'}"}, {"name": "status_code", "value": "200"}, {"name": "schema", "value": "<class 'schemas.register_schema.RegisterSchema'>"}], "start": 1712690296474, "stop": 1712690298297, "uuid": "66194c6a-e908-4131-bd01-a4bea77b9ef1", "historyId": "50522324d3b792b98d83b92db36aa516", "testCaseId": "e8cddf2ce74c487d8b5a52dde95b1f7f", "fullName": "Tests.API.test_register#test_successful_register", "labels": [{"name": "tag", "value": "api"}, {"name": "parentSuite", "value": "Tests.API"}, {"name": "suite", "value": "test_register"}, {"name": "host", "value": "Natalia"}, {"name": "thread", "value": "21040-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.API.test_register"}]}