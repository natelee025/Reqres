{"name": "test_successful_register[successful_register]", "status": "broken", "statusDetails": {"message": "pydantic_core._pydantic_core.ValidationError: 1 validation error for RegisterSchema\nid\n  Input should be a valid string [type=string_type, input_value=4, input_type=int]\n    For further information visit https://errors.pydantic.dev/2.6/v/string_type", "trace": "reg_ui = <pageclasses.register.RegisterUI object at 0x0000028C3E1ADC90>, data = {'email': 'eve.holt@reqres.in', 'password': 'pistol'}, status_code = 200\nschema = <class 'schemas.register_schema.RegisterSchema'>\n\n    @pytest.mark.ui\n    @pytest.mark.parametrize('data, status_code, schema', (successful_register,), ids=['successful_register', ])\n    def test_successful_register(reg_ui, data, status_code, schema):\n        reg_ui.click_on(reg.POST_REGISTER)\n        reg_ui.click_on(cl.TRY_IT_OUT_BTN)\n        reg_ui.reg_enter_request_body(data)\n        reg_ui.click_on(cl.EXECUTE_BTN)\n        reg_ui.assert_reg_status_code(status_code)\n>       reg_ui.validate_reg_schema(schema)\n\nTests\\UI\\test_register.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageclasses\\register.py:29: in validate_reg_schema\n    self.validate_schema(schema=schema, locator=cl.RESPONSE_JSON)\nbaseclasses\\base_ui.py:65: in validate_schema\n    schema.parse_obj(schema_dict)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'schemas.register_schema.RegisterSchema'>, obj = {'id': 4, 'token': 'QpwL5tke4Pnpja7X4'}\n\n    @classmethod\n    @typing_extensions.deprecated('The `parse_obj` method is deprecated; use `model_validate` instead.', category=None)\n    def parse_obj(cls: type[Model], obj: Any) -> Model:  # noqa: D102\n        warnings.warn(\n            'The `parse_obj` method is deprecated; use `model_validate` instead.', category=PydanticDeprecatedSince20\n        )\n>       return cls.model_validate(obj)\nE       pydantic_core._pydantic_core.ValidationError: 1 validation error for RegisterSchema\nE       id\nE         Input should be a valid string [type=string_type, input_value=4, input_type=int]\nE           For further information visit https://errors.pydantic.dev/2.6/v/string_type\n\nvenv\\lib\\site-packages\\pydantic\\main.py:1072: ValidationError"}, "parameters": [{"name": "data", "value": "{'email': 'eve.holt@reqres.in', 'password': 'pistol'}"}, {"name": "status_code", "value": "200"}, {"name": "schema", "value": "<class 'schemas.register_schema.RegisterSchema'>"}], "start": 1712690367747, "stop": 1712690369892, "uuid": "f6aec5f0-aeb7-4c80-baf3-abb3f424d52f", "historyId": "6bff72f02be6398fb645643ae24900a0", "testCaseId": "8ab9447c4ba43904bdeb63e214728929", "fullName": "Tests.UI.test_register#test_successful_register", "labels": [{"name": "tag", "value": "ui"}, {"name": "parentSuite", "value": "Tests.UI"}, {"name": "suite", "value": "test_register"}, {"name": "host", "value": "Natalia"}, {"name": "thread", "value": "21040-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.UI.test_register"}]}